
DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_BILLBOARD_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_BILLBOARD_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_BILLBOARD_TR
BEFORE INSERT ON MAGENCY_BILLBOARD
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_BILLBOARD_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_WEBSITE_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_WEBSITE_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_WEBSITE_TR
BEFORE INSERT ON MAGENCY_WEBSITE
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_WEBSITE_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_NEWSPAPER_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_NEWSPAPER_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_NEWSPAPER_TR
BEFORE INSERT ON MAGENCY_NEWSPAPER
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_NEWSPAPER_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_SECTION_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_SECTION_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_SECTION_TR
BEFORE INSERT ON MAGENCY_SECTION
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_SECTION_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/
CREATE TABLE MAGENCY_TELEVISION (
    ID NUMBER(11) NOT NULL PRIMARY KEY,
    TITLE NVARCHAR2(200)
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_TELEVISION_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_TELEVISION_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_TELEVISION_TR
BEFORE INSERT ON MAGENCY_TELEVISION
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_TELEVISION_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/
CREATE TABLE MAGENCY_PROGRAM (
    ID NUMBER(11) NOT NULL PRIMARY KEY,
    TITLE NVARCHAR2(200),
    TV_ID" NUMBER(11) NOT NULL REFERENCES "MAGENCY_TELEVISION" ("ID) DEFERRABLE INITIALLY DEFERRED
)
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_PROGRAM_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_PROGRAM_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_PROGRAM_TR
BEFORE INSERT ON MAGENCY_PROGRAM
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_PROGRAM_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_ADVERTISEMENT_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_ADVERTISEMENT_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_ADVERTISEMENT_TR
BEFORE INSERT ON MAGENCY_ADVERTISEMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_ADVERTISEMENT_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_NEWSPAPERAD_NEW631F_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_NEWSPAPERAD_NEW631F_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_NEWSPAPERAD_NEW631F_TR
BEFORE INSERT ON MAGENCY_NEWSPAPERAD_NEWSPAPERS
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_NEWSPAPERAD_NEW631F_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_NEWSPAPERAD_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_NEWSPAPERAD_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_NEWSPAPERAD_TR
BEFORE INSERT ON MAGENCY_NEWSPAPERAD
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_NEWSPAPERAD_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_TELEVISIONAD_PR4342_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_TELEVISIONAD_PR4342_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_TELEVISIONAD_PR4342_TR
BEFORE INSERT ON MAGENCY_TELEVISIONAD_PROGRAMS
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_TELEVISIONAD_PR4342_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_TELEVISIONAD_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_TELEVISIONAD_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_TELEVISIONAD_TR
BEFORE INSERT ON MAGENCY_TELEVISIONAD
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_TELEVISIONAD_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_BILLBOARDAD_BILD9A0_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_BILLBOARDAD_BILD9A0_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_BILLBOARDAD_BILD9A0_TR
BEFORE INSERT ON MAGENCY_BILLBOARDAD_BILLBOARDS
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_BILLBOARDAD_BILD9A0_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_BILLBOARDAD_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_BILLBOARDAD_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_BILLBOARDAD_TR
BEFORE INSERT ON MAGENCY_BILLBOARDAD
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_BILLBOARDAD_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/



DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_WEBSITEAD_WEBSITES_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_WEBSITEAD_WEBSITES_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_WEBSITEAD_WEBSITES_TR
BEFORE INSERT ON MAGENCY_WEBSITEAD_WEBSITES
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_WEBSITEAD_WEBSITES_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_WEBSITEAD_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_WEBSITEAD_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_WEBSITEAD_TR
BEFORE INSERT ON MAGENCY_WEBSITEAD
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_WEBSITEAD_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/


DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'MAGENCY_BILL_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE MAGENCY_BILL_SQ';
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MAGENCY_BILL_TR
BEFORE INSERT ON MAGENCY_BILL
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT MAGENCY_BILL_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/



DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'AUTH_USER_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE AUTH_USER_SQ';
    END IF;
END;
/



CREATE OR REPLACE TRIGGER AUTH_USER_TR
BEFORE INSERT ON AUTH_USER
FOR EACH ROW
WHEN (new.ID IS NULL)
    BEGIN
        SELECT AUTH_USER_SQ.nextval
        INTO :new.ID FROM dual;
    END;
/
